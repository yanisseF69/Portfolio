{
    "show" : "Voir plus",
    "projects" : [
        {
            "image" : "images/projects/diaphragm.gif",
            "title": "Recherche en imagerie médicale",
            "bodyText": "- Segmentation automatique du diaphragme.\n - Apprentissage profond avec utilisation de la technique du **Transfer Learning**.\n - Reconstruction 3D d'organes.",
            "links": [
                {
                    "text": "Rapport",
                    "href": "/Rapport_MIF11.pdf"
                }
            ],
            "tags" : [
                "Python",
                "IA",
                "Tensorflow",
                "Keras"
            ]
        },
        {
            "image" : "images/projects/robots.jpg",
            "title": "Robots LEGO récupérant des balles",
            "bodyText": "- Programmé en C++ à l'aide de la librairie EV3Dev.\n - Usage de OpenCV pour le traitement d'images.\n - Fusion de 4 caméras pour obtenir une vue du dessus.",
            "links": [
                {
                    "text": "Rapport",
                    "href": "/Rapport_Idefix.pdf"
                }
            ],
            "tags" : [
                "C++",
                "EV3Dev",
                "OpenCV",
                "Robotique"
            ]
        },
        {
            "image" : "images/projects/drawing.png",
            "title": "Site de prédictions de dessins",
            "bodyText": "- Découverte du deep learning pour la classification d'images.\n - Usage de Tensorflow pour la construction de l'architecture et de l'entraînement.\n - Affichage du pourcentage de prédiction du TOP 3.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/yanisseF69/Projet_info_2023"
                }
            ],
            "tags" : [
                "Python",
                "Deep learning",
                "IA",
                "Tensorflow",
                "Keras",
                "OpenCV"
            ]
        },
        {
            "image" : "images/projects/genCNN.png",
            "title": "Deep learning pour de la Génération d'images",
            "bodyText": "- En python avec utilisation de Pytorch.\n - Reproduction d'images basée sur une vidéo de danse.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/yanisseF69/ATIV-TP-Dance"
                }
            ],
            "tags" : [
                "Python",
                "Deep learning",
                "IA",
                "Pytorch",
                "Pillow",
                "OpenCV"
            ]
        },
        {
            "image" : "images/projects/cubeWorld.png",
            "title": "Synthèse d'images 3D",
            "bodyText": "- Utilisation de C++ et de l'API 3D OpenGL\n- Modélisation d'un terrain rempli de cubes.\n- Couleur du cube varie selon la hauteur. ",
            "tags" : [
                "C++",
                "OpenGL",
                "Rendu 3D"
            ]
        },
        {
            "image" : "images/projects/laplacian.png",
            "title": "Opérateur de Laplace sur un maillage",
            "bodyText": "- Module en C++ permettant de charger un maillage sous format .off.\n - Implémentation de l'opérateur de Laplace pour calculer la courbure.",
            "links": [
                {
                    "text": "Rapport",
                    "href": "/Rapport_GAM.pdf"
                }
            ],
            "tags" : [
                "C++",
                "Maillages",
                "Géométrie",
                "Laplacien"
            ]
        },
        {
            "image" : "images/projects/surfaces.png",
            "title": "Courbes, surfaces de révolution et surfaces implicites",
            "bodyText": "- 1e partie sur les courbes de Bézier et Hermite Cubique Spline.\n- 2e partie : codage de primitives, d'opérations et de transformations. Et réalisation de formes complexes.",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/yanisseF69/Modelisation-geometrique/"
                },
                {
                    "text": "Rapport Partie 1",
                    "href": "/Rapport_MG_1.pdf"
                },
                {
                    "text": "Rapport Partie 2",
                    "href": "Rapport_MG_2.pdf"
                }
            ],
            "tags" : [
                "C++",
                "QT",
                "Modélisation Géométrique",
                "Courbes",
                "Surfaces implicites"
            ]
        },
        {
            "image" : "images/projects/voronoi.png",
            "title": "Génération de diagrammes de Voronoï",
            "bodyText": "- Introduction aux Graphes.\n- Implémentation de l'algorithme des plus courts chemins (Dijkstra).",
            "links": [
                {
                    "text": "GitHub",
                    "href": "https://github.com/yanisseF69/LIFAPC_Graphe"
                }
            ],
            "tags" : [
                "C++",
                "Dijkstra"
            ]
        }
    ]
}